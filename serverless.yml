org: arroyodev
app: big3d
service: big3d

frameworkVersion: '2'


provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  region: us-east-1
  apiGateway:
    minimumCompressionSize: 1024
    shouldStartNameWithService: true
    binaryMediaTypes:
      - 'multipart/form-data'
  ecr:
    images:
      big3d-api:
        path: ./

functions:
  works:
    image:
      name: big3d-api
    handler: big3d/auth.auth_handler
    events:
      - http:
          path: /works
          method: get
          cors: true

  authCreateUser:
    image:
      name: big3d-api
    handler: big3d/auth.create_new_user
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/create
          method: post
          cors: true
  authUser:
    image:
      name: big3d-api
    handler: big3d/auth.authenticate_user
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/auth
          method: get
          cors: true

  authForgotPassword:
    image:
      name: big3d-api
    handler: big3d/auth.forgot_password
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/forgot
          method: get
          cors: true

  authConfirmForgotPassword:
    image:
      name: big3d-api
    handler: big3d/auth.confirm_forgot_password
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/confirm_forgot
          method: get
          cors: true

  authUpdateUser:
    image:
      name: big3d-api
    handler: big3d/auth.update_user
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/update
          method: get
          cors: true

  authGetUser:
    image:
      name: big3d-api
    handler: big3d/auth.get_user
    environment:
      USER_POOL_ID: ${param:USER_POOL_ID}
      CLIENT_ID: ${param:CLIENT_ID}
    events:
      - http:
          path: /user/get
          method: get
          cors: true

  OrderCreate:
    image:
      name: big3d-api
    handler: big3d/order.create_new_order
    events:
      - http:
          path: /order/create
          method: post
          cors: true


  OrderGet:
    image:
      name: big3d-api
    handler: big3d/order.get_user_orders
    events:
      - http:
          path: /order/{userId}
          method: get
          cors: true


plugins:
  - serverless-offline
  - serverless-python-requirements
  - serverless-dotenv-plugin

custom:
  pythonRequirements:
    dockerizePip: true
